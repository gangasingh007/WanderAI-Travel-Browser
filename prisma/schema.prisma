// /prisma/schema.prisma

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ----------------------------------------------
// This model matches your 'types/supabase.ts'
// ----------------------------------------------
model User {
  id         String   @id @default(uuid())
  email      String   @unique
  username   String?
  full_name  String?
  avatar_url String?
  user_type  UserType @default(TRAVELER)
  bio        String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // --- Relation to new Chat model ---
  chats Chat[]

  @@map("users") // Maps to your 'public.users' table
}

// ----------------------------------------------
// NEW MODELS TO ADD
// ----------------------------------------------

// A Chat session, which belongs to a User
model Chat {
  id        String   @id @default(cuid())
  title     String   @default("New Chat") // A title for the chat, e.g., "Trip to Paris"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation to User
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Relation to Messages
  messages Message[]
}

// An individual Message, which belongs to a Chat
model Message {
  id        String   @id @default(cuid())
  content   String   @db.Text // Use @db.Text for long messages
  sender    String   // We'll store "user" or "ai" here
  createdAt DateTime @default(now())

  // Relation to Chat
  chatId String
  chat   Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade)
}

// ----------------------------------------------
// This enum matches your 'types/supabase.ts'
// ----------------------------------------------
enum UserType {
  TRAVELER
  CREATOR
}